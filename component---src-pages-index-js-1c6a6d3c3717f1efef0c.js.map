{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/utils/typography.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Layout.js"],"names":["__webpack_require__","r","__webpack_exports__","global","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","react_emotion__WEBPACK_IMPORTED_MODULE_3__","react_helmet__WEBPACK_IMPORTED_MODULE_4__","react_helmet__WEBPACK_IMPORTED_MODULE_4___default","_components_Layout__WEBPACK_IMPORTED_MODULE_5__","_utils_typography__WEBPACK_IMPORTED_MODULE_6__","window","_ref","data","siteTitle","site","siteMetadata","title","siteDescription","description","a","createElement","location","htmlAttributes","lang","meta","name","content","allMarkdownRemark","totalCount","edges","map","_ref2","node","key","fields","slug","className","css","rhythm","to","frontmatter","date","excerpt","graphql","StaticQueryContext","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","scale","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","typography_theme_github__WEBPACK_IMPORTED_MODULE_1__","typography_theme_github__WEBPACK_IMPORTED_MODULE_1___default","typography","Typography","gitHubTheme","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","react__WEBPACK_IMPORTED_MODULE_2___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","header","__PATH_PREFIX__","style","marginBottom","marginTop","boxShadow","textDecoration","color","fontFamily","_public_static_d_178188869_json__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"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","file":"component---src-pages-index-js-1c6a6d3c3717f1efef0c.js","sourcesContent":["import React from 'react'\r\nimport { Link, graphql } from 'gatsby'\r\nimport get from 'lodash/get'\r\nimport { css } from \"react-emotion\"\r\nimport Helmet from 'react-helmet'\r\n\r\nimport Layout from '../components/Layout'\r\nimport { rhythm } from '../utils/typography'\r\n\r\nif (typeof window === 'undefined') {\r\n  global.window = {}\r\n}\r\n\r\nexport default ({data}) => {\r\n  const siteTitle = data.site.siteMetadata.title\r\n  const siteDescription = data.site.siteMetadata.description\r\n  return (\r\n<Layout location={window.location}>\r\n  <Helmet\r\n            htmlAttributes={{ lang: 'en' }}\r\n            meta={[{ name: 'description', content: siteDescription }]}\r\n            title={siteTitle}\r\n          />\r\n  <div>\r\n\r\n      <h4>{data.allMarkdownRemark.totalCount} 개의 포스트</h4>\r\n\r\n  {data.allMarkdownRemark.edges.map(({node}) =>{\r\n    \r\n    return (\r\n      <div key= {node.fields.slug}>\r\n      <h3\r\n          className={css`\r\n          margin-bottom: ${rhythm(1/4)};\r\n      `}\r\n      >\r\n      <Link \r\n          to = {node.fields.slug}\r\n          className={css`\r\n          text-decoration: none;\r\n          color: inherit;\r\n          box-shadow: none;\r\n      `\r\n      }\r\n      >\r\n      {node.frontmatter.title}{\" \"}\r\n      </Link>\r\n      </h3>\r\n      <small \r\n       className={css`\r\n       color:#bbb;\r\n       `}\r\n       >\r\n      {node.frontmatter.date}</small>\r\n      <p>{node.excerpt}</p>\r\n\r\n      </div>\r\n  )})}\r\n  </div>\r\n  </Layout>\r\n  )\r\n}\r\n\r\n\r\nexport const query = graphql`\r\n\r\n  query {\r\n    site{\r\n      siteMetadata{\r\n        title\r\n        description\r\n      }\r\n    }\r\n  allMarkdownRemark(sort:{fields:[frontmatter___date], order:DESC}) {\r\n      totalCount\r\n    edges {\r\n      node {\r\n        frontmatter{\r\n          title\r\n          date(formatString:\"DD MMMM, YYYY\")\r\n        }\r\n        fields{\r\n            slug\r\n        }\r\n        excerpt\r\n      }\r\n    }\r\n  }\r\n}\r\n`\r\n\r\n// class BlogIndex extends React.Component {\r\n//   render() {\r\n//     const siteTitle = get(this, 'props.data.site.siteMetadata.title')\r\n//     const siteDescription = get(\r\n//       this,\r\n//       'props.data.site.siteMetadata.description'\r\n//     )\r\n//     const posts = get(this, 'props.data.allMarkdownRemark.edges')\r\n\r\n//     return (\r\n//       <Layout location={this.props.location} title={siteTitle}>\r\n//         <Helmet\r\n//           htmlAttributes={{ lang: 'en' }}\r\n//           meta={[{ name: 'description', content: siteDescription }]}\r\n//           title={siteTitle}\r\n//         />\r\n//         <Bio />\r\n//         {posts.map(({ node }) => {\r\n//           const title = get(node, 'frontmatter.title') || node.fields.slug\r\n//           return (\r\n//             <div key={node.fields.slug}>\r\n//               <h3\r\n//                 style={{\r\n//                   marginBottom: rhythm(1 / 4),\r\n//                 }}\r\n//               >\r\n//                 <Link style={{ boxShadow: 'none' }} to={node.fields.slug}>\r\n//                   {title}\r\n//                 </Link>\r\n//               </h3>\r\n//               <small>{node.frontmatter.date}</small>\r\n//               <p dangerouslySetInnerHTML={{ __html: node.excerpt }} />\r\n//             </div>\r\n//           )\r\n//         })}\r\n//       </Layout>\r\n//     )\r\n//   }\r\n// }\r\n\r\n// export default BlogIndex\r\n\r\n// export const pageQuery = graphql`\r\n//   query {\r\n//     site {\r\n//       siteMetadata {\r\n//         title\r\n//         description\r\n//       }\r\n//     }\r\n//     allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\r\n//       edges {\r\n//         node {\r\n//           excerpt\r\n//           fields {\r\n//             slug\r\n//           }\r\n//           frontmatter {\r\n//             date(formatString: \"MMMM DD, YYYY\")\r\n//             title\r\n//           }\r\n//         }\r\n//       }\r\n//     }\r\n//   }\r\n// `\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import Typography from 'typography'\r\nimport gitHubTheme from 'typography-theme-github'\r\n\r\n// Wordpress2016.overrideThemeStyles = () => ({\r\n//   'a.gatsby-resp-image-link': {\r\n//     boxShadow: 'none',\r\n//   },\r\n// })\r\n\r\n// delete Wordpress2016.googleFonts\r\n\r\nconst typography = new Typography(gitHubTheme)\r\n\r\n// Hot reload typography in development.\r\nif (process.env.NODE_ENV !== 'production') {\r\n  typography.injectStyles()\r\n}\r\n\r\nexport default typography\r\nexport const rhythm = typography.rhythm\r\nexport const scale = typography.scale\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\r\nimport { css } from \"react-emotion\"\r\nimport { StaticQuery, Link, graphql } from 'gatsby'\r\nimport { rhythm, scale } from '../utils/typography'\r\n\r\n\r\nexport default (props) =>\r\n(\r\n  <StaticQuery\r\n    query={graphql`\r\n        query{\r\n            site{\r\n                siteMetadata{\r\n                    title\r\n                }\r\n            }\r\n        }\r\n    `}\r\n    render={data => {\r\n    const rootPath = `${__PATH_PREFIX__}/`\r\n    let header\r\n    if (props.location && props.location.pathname === rootPath) {\r\n      header = (\r\n        <h1\r\n          style={{\r\n            ...scale(1.2),\r\n            marginBottom: rhythm(1.5),\r\n            marginTop: 0,\r\n          }}\r\n        >\r\n          <Link\r\n            style={{\r\n              boxShadow: 'none',\r\n              textDecoration: 'none',\r\n              color: 'darkseagreen',\r\n            }}\r\n            to={'/'}\r\n          >\r\n            {data.site.siteMetadata.title}\r\n          </Link>\r\n        </h1>\r\n      )\r\n    } else {\r\n      header = (\r\n        <h3\r\n          style={{\r\n            fontFamily: 'Montserrat, sans-serif',\r\n            marginTop: 0,\r\n            marginBottom: rhythm(-1),\r\n          }}\r\n        >\r\n          <Link\r\n            style={{\r\n              boxShadow: 'none',\r\n              textDecoration: 'none',\r\n              color:'darkseagreen',\r\n            }}\r\n            to={'/'}\r\n          >\r\n            {data.site.siteMetadata.title}\r\n          </Link>\r\n        </h3>\r\n      )\r\n    }\r\n    return(\r\n      <div\r\n      className={css`\r\n      margin: 0 auto;\r\n      max-width: 800px;\r\n      padding: ${rhythm(2)};\r\n      padding-top: ${rhythm(1.5)};\r\n    `}\r\n      >\r\n        {header}\r\n        {props.children}\r\n      </div>\r\n        )}}\r\n    />\r\n)\r\n  \r\n// class Layout extends React.Component {\r\n//   render() {\r\n//     const { location, title, children } = this.props\r\n//     const rootPath = `${__PATH_PREFIX__}/`\r\n//     let header\r\n\r\n//     if (location.pathname === rootPath) {\r\n//       header = (\r\n//         <h1\r\n//           style={{\r\n//             ...scale(1.5),\r\n//             marginBottom: rhythm(1.5),\r\n//             marginTop: 0,\r\n//           }}\r\n//         >\r\n//           <Link\r\n//             style={{\r\n//               boxShadow: 'none',\r\n//               textDecoration: 'none',\r\n//               color: 'inherit',\r\n//             }}\r\n//             to={'/'}\r\n//           >\r\n//             {title}\r\n//           </Link>\r\n//         </h1>\r\n//       )\r\n//     } else {\r\n//       header = (\r\n//         <h3\r\n//           style={{\r\n//             fontFamily: 'Montserrat, sans-serif',\r\n//             marginTop: 0,\r\n//             marginBottom: rhythm(-1),\r\n//           }}\r\n//         >\r\n//           <Link\r\n//             style={{\r\n//               boxShadow: 'none',\r\n//               textDecoration: 'none',\r\n//               color: 'inherit',\r\n//             }}\r\n//             to={'/'}\r\n//           >\r\n//             {title}\r\n//           </Link>\r\n//         </h3>\r\n//       )\r\n//     }\r\n//     return (\r\n//       <div\r\n//         style={{\r\n//           marginLeft: 'auto',\r\n//           marginRight: 'auto',\r\n//           maxWidth: rhythm(24),\r\n//           padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\r\n//         }}\r\n//       >\r\n//         {header}\r\n//         {children}\r\n//       </div>\r\n//     )\r\n//   }\r\n// }\r\n\r\n// export default Layout\r\n"],"sourceRoot":""}