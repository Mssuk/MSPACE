{"data":{"site":{"siteMetadata":{"title":"MSPACE","description":"하는 것들을 적는 공간."}},"allMarkdownRemark":{"totalCount":14,"edges":[{"node":{"frontmatter":{"title":"Backtracking","date":"09 December, 2018","category":"알고리즘"},"fields":{"slug":"/study/algorithm/backtracking/2018-12-09/","categorySlug":"/categories/알고리즘/"},"excerpt":"미로 찾기의 경우처럼, 지금 상태에서 앞으로 계속 진행한다고 하더라도 해답을 구할 수 없는 경우에는 앞으로 나아가는 것을 포기하고 이전 상태로 되돌아가서 다른 경우를 찾아본다. N-Queen Problem 4개의 queen…"}},{"node":{"frontmatter":{"title":"Graph Alogrithms","date":"09 December, 2018","category":"알고리즘"},"fields":{"slug":"/study/algorithm/graph/.~2018-12-09graph/","categorySlug":"/categories/알고리즘/"},"excerpt":"그래프 알고리즘 . 그래프의 표현 그래프는  Adjacency matrix(인접행렬)  이나  Adjacency list(인접 리스트) 로 나타낼 수 있다. 인접 행렬 은 connectivity…"}},{"node":{"frontmatter":{"title":"Graph Alogrithms","date":"09 December, 2018","category":"알고리즘"},"fields":{"slug":"/study/algorithm/graph/2018-12-09graph/","categorySlug":"/categories/알고리즘/"},"excerpt":"그래프 알고리즘 . 그래프의 표현 그래프는  Adjacency matrix(인접행렬)  이나  Adjacency list(인접 리스트) 로 나타낼 수 있다. 인접 행렬 은 connectivity…"}},{"node":{"frontmatter":{"title":"Greedy Approach (욕심쟁이 기법)","date":"08 December, 2018","category":"알고리즘"},"fields":{"slug":"/study/algorithm/greedyApproach/18-12-08greedy/","categorySlug":"/categories/알고리즘/"},"excerpt":"욕심쟁이 기법 . 입력으로 여러 개의 원소들의 집합 S가 주어진다. 해답으로는 문제에서 주어지는 조건을 만족하는 집합 S에 속하는 원소들의 부분집합 G…"}},{"node":{"frontmatter":{"title":"Dynamic Programming (1)","date":"07 December, 2018","category":"알고리즘"},"fields":{"slug":"/study/algorithm/dynamicProgramming/2018-12-07dp/","categorySlug":"/categories/알고리즘/"},"excerpt":"동적계획법 . Divide - and - Conquer  과 유사. 문제를 여러 개의 subproblem으로 나누고, 각각의 subproblem을 해결한 후, 원래 문제의 해답을 계산함. 그러나 각각의 subproblem…"}},{"node":{"frontmatter":{"title":"Dynamic Programming (2)","date":"07 December, 2018","category":"알고리즘"},"fields":{"slug":"/study/algorithm/dynamicProgramming/2018-12-07dp2/","categorySlug":"/categories/알고리즘/"},"excerpt":"2차 동적계획법 . 재귀식에서 2개의 변수가 필요한 문제 2차원 배열로 동적계획법 구현 ( 이항계수 문제, 동전교환 문제,  최장공통부분수열 문제 등…) 이항계수 계산문제 단계 1, 2) 이항계수의 구조분석 및 재귀식  단계…"}},{"node":{"frontmatter":{"title":"Longest Increasing Subsequence","date":"03 December, 2018","category":"알고리즘"},"fields":{"slug":"/study/algorithm/2018-12-03-LIS/","categorySlug":"/categories/알고리즘/"},"excerpt":"Longest Increasing Subsequence Subsequence란, 주어진 배열에서 몇개의 원소(element)를 선택한 부분배열입니다 (단, 하나의 substring…"}},{"node":{"frontmatter":{"title":"Serialize and Deserialize Binary Tree","date":"03 December, 2018","category":"자료구조"},"fields":{"slug":"/study/data_structure/tree/binarytree/","categorySlug":"/categories/자료구조/"},"excerpt":"링크:  https://leetcode.com/problems/serialize-and-deserialize-binary-tree/ 트리를 string 데이터 타입으로 serialize로 하고, seralized된 string…"}},{"node":{"frontmatter":{"title":"동전교환문제","date":"02 December, 2018","category":"알고리즘"},"fields":{"slug":"/study/algorithm/2018-12-02-coins/","categorySlug":"/categories/알고리즘/"},"excerpt":"동전 교환 동전이 동전 액수와 함께 주어졌을 때 목표 금액을 만들 수 있는 최소한의 동전 개수를 구하는 코드를 작성하시오. 동전은 양의 정수의 배열로 주어지고 목표 금액이 주어집니다. 만약 주어진 액수를 만들 수 없다면 -…"}},{"node":{"frontmatter":{"title":"B-Tree","date":"02 December, 2018","category":"자료구조"},"fields":{"slug":"/study/data_structure/tree/btree/","categorySlug":"/categories/자료구조/"},"excerpt":"균형된 m-원 탐색 트리 (Balanced MST).  MST와의 차이점: 키의 최소 갯수가 제한이 있다.  최소 m/2개의 분기를 가진다. n (⌈m/2⌉-1 ≤ n ≤ m-…"}},{"node":{"frontmatter":{"title":"W3C HTML5 Conference 2018을 다녀오고 나서..","date":"27 November, 2018","category":"etc"},"fields":{"slug":"/etc/181127/conference/","categorySlug":"/categories/etc/"},"excerpt":"11월 26일 월요일, 코엑스에서 진행되는 W3C HTML5 컨퍼런스에 참석하였다.\n오전 9시부터 오후 6시까지 진행되는 행사였는데, 별개의 세부 주제를 다루는 트랙을 선택하여 듣는 방식이었다. 그 중에서 나는 앞으로의 Web API…"}},{"node":{"frontmatter":{"title":"테스트 페이지","date":"20 November, 2018","category":"test"},"fields":{"slug":"/hello-world/","categorySlug":"/categories/test/"},"excerpt":"토마토가 나옵니다.ggg\n salted duck eggs ."}},{"node":{"frontmatter":{"title":"New Beginnings","date":"28 May, 2015","category":"test"},"fields":{"slug":"/hi-folks/","categorySlug":"/categories/test/"},"excerpt":"Far far away, behind the word mountains, far from the countries Vokalia and\nConsonantia, there live the blind texts. Separated they live in…"}},{"node":{"frontmatter":{"title":"My Second Post!","date":"06 May, 2015","category":"test"},"fields":{"slug":"/my-second-post/","categorySlug":"/categories/test/"},"excerpt":"Wow! I love blogging so much already. Did you know that “despite its name, salted duck eggs can also be made from\nchicken eggs, though the…"}}]}},"pageContext":{"group":[{"node":{"frontmatter":{"title":"Backtracking","date":"09 December, 2018","category":"알고리즘"},"fields":{"slug":"/study/algorithm/backtracking/2018-12-09/","categorySlug":"/categories/알고리즘/"},"excerpt":"미로 찾기의 경우처럼, 지금 상태에서 앞으로 계속 진행한다고 하더라도 해답을 구할 수 없는 경우에는 앞으로 나아가는 것을 포기하고 이전 상태로 되돌아가서 다른 경우를 찾아본다. N-Queen Problem 4개의 queen…"}},{"node":{"frontmatter":{"title":"Graph Alogrithms","date":"09 December, 2018","category":"알고리즘"},"fields":{"slug":"/study/algorithm/graph/2018-12-09graph/","categorySlug":"/categories/알고리즘/"},"excerpt":"그래프 알고리즘 . 그래프의 표현 그래프는  Adjacency matrix(인접행렬)  이나  Adjacency list(인접 리스트) 로 나타낼 수 있다. 인접 행렬 은 connectivity…"}},{"node":{"frontmatter":{"title":"Greedy Approach (욕심쟁이 기법)","date":"08 December, 2018","category":"알고리즘"},"fields":{"slug":"/study/algorithm/greedyApproach/18-12-08greedy/","categorySlug":"/categories/알고리즘/"},"excerpt":"욕심쟁이 기법 . 입력으로 여러 개의 원소들의 집합 S가 주어진다. 해답으로는 문제에서 주어지는 조건을 만족하는 집합 S에 속하는 원소들의 부분집합 G…"}},{"node":{"frontmatter":{"title":"Dynamic Programming (1)","date":"07 December, 2018","category":"알고리즘"},"fields":{"slug":"/study/algorithm/dynamicProgramming/2018-12-07dp/","categorySlug":"/categories/알고리즘/"},"excerpt":"동적계획법 . Divide - and - Conquer  과 유사. 문제를 여러 개의 subproblem으로 나누고, 각각의 subproblem을 해결한 후, 원래 문제의 해답을 계산함. 그러나 각각의 subproblem…"}},{"node":{"frontmatter":{"title":"Dynamic Programming (2)","date":"07 December, 2018","category":"알고리즘"},"fields":{"slug":"/study/algorithm/dynamicProgramming/2018-12-07dp2/","categorySlug":"/categories/알고리즘/"},"excerpt":"2차 동적계획법 . 재귀식에서 2개의 변수가 필요한 문제 2차원 배열로 동적계획법 구현 ( 이항계수 문제, 동전교환 문제,  최장공통부분수열 문제 등…) 이항계수 계산문제 단계 1, 2) 이항계수의 구조분석 및 재귀식  단계…"}},{"node":{"frontmatter":{"title":"Longest Increasing Subsequence","date":"03 December, 2018","category":"알고리즘"},"fields":{"slug":"/study/algorithm/2018-12-03-LIS/","categorySlug":"/categories/알고리즘/"},"excerpt":"Longest Increasing Subsequence Subsequence란, 주어진 배열에서 몇개의 원소(element)를 선택한 부분배열입니다 (단, 하나의 substring…"}},{"node":{"frontmatter":{"title":"Serialize and Deserialize Binary Tree","date":"03 December, 2018","category":"자료구조"},"fields":{"slug":"/study/data_structure/tree/binarytree/","categorySlug":"/categories/자료구조/"},"excerpt":"링크:  https://leetcode.com/problems/serialize-and-deserialize-binary-tree/ 트리를 string 데이터 타입으로 serialize로 하고, seralized된 string…"}},{"node":{"frontmatter":{"title":"동전교환문제","date":"02 December, 2018","category":"알고리즘"},"fields":{"slug":"/study/algorithm/2018-12-02-coins/","categorySlug":"/categories/알고리즘/"},"excerpt":"동전 교환 동전이 동전 액수와 함께 주어졌을 때 목표 금액을 만들 수 있는 최소한의 동전 개수를 구하는 코드를 작성하시오. 동전은 양의 정수의 배열로 주어지고 목표 금액이 주어집니다. 만약 주어진 액수를 만들 수 없다면 -…"}},{"node":{"frontmatter":{"title":"B-Tree","date":"02 December, 2018","category":"자료구조"},"fields":{"slug":"/study/data_structure/tree/btree/","categorySlug":"/categories/자료구조/"},"excerpt":"균형된 m-원 탐색 트리 (Balanced MST).  MST와의 차이점: 키의 최소 갯수가 제한이 있다.  최소 m/2개의 분기를 가진다. n (⌈m/2⌉-1 ≤ n ≤ m-…"}},{"node":{"frontmatter":{"title":"W3C HTML5 Conference 2018을 다녀오고 나서..","date":"27 November, 2018","category":"etc"},"fields":{"slug":"/etc/181127/conference/","categorySlug":"/categories/etc/"},"excerpt":"11월 26일 월요일, 코엑스에서 진행되는 W3C HTML5 컨퍼런스에 참석하였다.\n오전 9시부터 오후 6시까지 진행되는 행사였는데, 별개의 세부 주제를 다루는 트랙을 선택하여 듣는 방식이었다. 그 중에서 나는 앞으로의 Web API…"}}],"pathPrefix":"","first":true,"last":false,"index":1,"pageCount":2,"additionalContext":{}}}