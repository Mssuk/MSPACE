{"data":{"site":{"siteMetadata":{"title":"MSPACE","author":"Song Min Suk"}},"markdownRemark":{"id":"1699b8ce-c5ea-5e83-8838-e0e3d2bf9219","excerpt":"Longest Increasing Subsequence Subsequence란, 주어진 배열에서 몇개의 원소(element)를 선택한 부분배열입니다 (단, 하나의 substring…","html":"<h3>Longest Increasing Subsequence</h3>\n<p>Subsequence란, 주어진 배열에서 몇개의 원소(element)를 선택한 부분배열입니다 (단, 하나의 substring처럼 연속적으로 연결되어 있을 필요는 없음). 이 부분배열에서 원래 주어진 배열 내 원소 중 오름차순 순서로만 되어 있는 부분배열을 Increasing Subsequence라고 합니다. 주어진 배열에서 가장 긴 오름차순 Subsequence를 찾으시오.</p>\n<h3>입출력 형식</h3>\n<ul>\n<li>입력: 정수형 배열</li>\n<li>출력: 가장 긴 오름차순 부분배열(Longest Increasing Subsequence)의 원소의 수</li>\n</ul>\n<h3>입출력 예</h3>\n<ul>\n<li>입력: [10,9,2,5,3,7,101,18]</li>\n<li>출력: 4</li>\n<li>해설: 가장 긴 오름차순 부분배열은 [2,3,7,101] 및 이와 같은 개수의 부분배열, 그러므로 길이는 4</li>\n</ul>\n<hr>\n<ul>\n<li>numbers</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>index</th>\n<th>0</th>\n<th>1</th>\n<th>2</th>\n<th>3</th>\n<th>4</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>value</td>\n<td>10</td>\n<td>9</td>\n<td>2</td>\n<td>5</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th>5</th>\n<th>6</th>\n<th>7</th>\n<th>-</th>\n<th>-</th>\n<th>-</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>7</td>\n<td>101</td>\n<td>18</td>\n<td>-</td>\n<td>-</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<p>최대 길이를 적어 넣을 배열을 하나 만든다.</p>\n<ul>\n<li>dp</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>index</th>\n<th>0</th>\n<th>1</th>\n<th>2</th>\n<th>3</th>\n<th>4</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>value</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th>5</th>\n<th>6</th>\n<th>7</th>\n<th>-</th>\n<th>-</th>\n<th>-</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<hr>\n<p>i = 0 일 때,</p>\n<p>len = 0;</p>\n<p>dp[ 0 ] = len  + 1;</p>\n<p>answer = max(0, dp[0]) ; // 1</p>\n<ul>\n<li>dp</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>index</th>\n<th>0</th>\n<th>1</th>\n<th>2</th>\n<th>3</th>\n<th>4</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>value</td>\n<td><strong><em>1</em></strong></td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th>5</th>\n<th>6</th>\n<th>7</th>\n<th>-</th>\n<th>-</th>\n<th>-</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<hr>\n<p>i = 1일 때,</p>\n<p>len = 0;</p>\n<p>​\tj = 0 일 때,</p>\n<p>​\t if(numbers[0] &#x3C; numbers[1]) ? no</p>\n<p>dp[1] = len + 1; // 1</p>\n<p>answer = max(1, dp[1]); //1</p>\n<ul>\n<li>dp</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>index</th>\n<th>0</th>\n<th>1</th>\n<th>2</th>\n<th>3</th>\n<th>4</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>value</td>\n<td><em>1</em></td>\n<td><strong><em>1</em></strong></td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th>5</th>\n<th>6</th>\n<th>7</th>\n<th>-</th>\n<th>-</th>\n<th>-</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<hr>\n<p>i=2일 때,</p>\n<p>len = 0;</p>\n<p>​\tj = 0일 때,</p>\n<p>​\tif(numbers[0]&#x3C; numbers[2]) ? no</p>\n<p>​\tj= 1일 때,</p>\n<p>​\tif(numbers[1] &#x3C; numbers[2]) ? no</p>\n<p>dp[2] = len + 1; //1</p>\n<p>answer = max(1, 1) // 1</p>\n<ul>\n<li>dp</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>index</th>\n<th>0</th>\n<th>1</th>\n<th>2</th>\n<th>3</th>\n<th>4</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>value</td>\n<td><em>1</em></td>\n<td><em>1</em></td>\n<td><strong><em>1</em></strong></td>\n<td>0</td>\n<td>0</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th>5</th>\n<th>6</th>\n<th>7</th>\n<th>-</th>\n<th>-</th>\n<th>-</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<hr>\n<p>i=3일 때,</p>\n<p>len = 0;</p>\n<p>​\tj = 0일 때,</p>\n<p>​\tif(numbers[0]&#x3C; numbers[3]) ? no</p>\n<p>​\tj= 1일 때,</p>\n<p>​\tif(numbers[1] &#x3C; numbers[3]) ? no</p>\n<p>​\tj= 2일 때,</p>\n<p>​\tif(numbers[2] &#x3C; numbers[3]) ? yes</p>\n<p>​\t\tlen = max( len, dp[2]) // 1;</p>\n<p>dp[3] = len + 1; // 2</p>\n<p>answer = max( 1, 2 ) // 2</p>\n<ul>\n<li>dp</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>index</th>\n<th>0</th>\n<th>1</th>\n<th>2</th>\n<th>3</th>\n<th>4</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>value</td>\n<td><em>1</em></td>\n<td><em>1</em></td>\n<td><em>1</em></td>\n<td><strong><em>2</em></strong></td>\n<td>0</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th>5</th>\n<th>6</th>\n<th>7</th>\n<th>-</th>\n<th>-</th>\n<th>-</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<hr>\n<p>i=4일 때,</p>\n<p>len = 0;</p>\n<p>​\tj = 0일 때,</p>\n<p>​\tif(numbers[0]&#x3C; numbers[4]) ? no</p>\n<p>​\tj= 1일 때,</p>\n<p>​\tif(numbers[1] &#x3C; numbers[4]) ? no</p>\n<p>​\tj= 2일 때,</p>\n<p>​\tif(numbers[2] &#x3C; numbers[4]) ? yes</p>\n<p>​\t\tlen = max( len, dp[2]) // 1;</p>\n<p>​\tif(numbers[3] &#x3C; numbers[4]) ? no</p>\n<p>dp[4] = len + 1; // 2</p>\n<p>answer = max( 2, 2 ) // 2</p>\n<ul>\n<li>dp</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>index</th>\n<th>0</th>\n<th>1</th>\n<th>2</th>\n<th>3</th>\n<th>4</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>value</td>\n<td><em>1</em></td>\n<td><em>1</em></td>\n<td><em>1</em></td>\n<td><em>2</em></td>\n<td><strong><em>2</em></strong></td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th>5</th>\n<th>6</th>\n<th>7</th>\n<th>-</th>\n<th>-</th>\n<th>-</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<hr>\n<p>i=5일 때,</p>\n<p>len = 0;</p>\n<p>​\tj = 0일 때,</p>\n<p>​\tif(numbers[0]&#x3C; numbers[5]) ? no</p>\n<p>​\tj= 1일 때,</p>\n<p>​\tif(numbers[1] &#x3C; numbers[5]) ? no</p>\n<p>​\tj= 2일 때,</p>\n<p>​\tif(numbers[2] &#x3C; numbers[5]) ? yes</p>\n<p>​\t\tlen = max( len, dp[2]) // 1;</p>\n<p>​\tif(numbers[3] &#x3C; numbers[5]) ? yes</p>\n<p>​\t\tlen = max (len, dp[3]) // max(1, 2) 는 2; </p>\n<p>​\tif(numbers[4] &#x3C; numbers[5]) ? yes</p>\n<p>​\t\tlen = max(len, dp[4]) // max(2, 2) 는 2;</p>\n<p>dp[5] = len + 1; // 3</p>\n<p>answer = max( 2, 3 ) // 3</p>\n<ul>\n<li>dp</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>index</th>\n<th>0</th>\n<th>1</th>\n<th>2</th>\n<th>3</th>\n<th>4</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>value</td>\n<td><em>1</em></td>\n<td><em>1</em></td>\n<td><em>1</em></td>\n<td><em>2</em></td>\n<td>2</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th>5</th>\n<th>6</th>\n<th>7</th>\n<th>-</th>\n<th>-</th>\n<th>-</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong><em>3</em></strong></td>\n<td>0</td>\n<td>0</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<hr>\n<p>i=6일 때,</p>\n<p>len = 0;</p>\n<p>​\tj = 0일 때,</p>\n<p>​\tif(numbers[0]&#x3C; numbers[6]) ? yes</p>\n<p>​\t\tlen = max( len , dp[0]) // 1;</p>\n<p>​\tj= 1일 때,</p>\n<p>​\tif(numbers[1] &#x3C; numbers[6]) ? yes</p>\n<p>​\t\tlen = max( len, dp[1]) // 1;</p>\n<p>​\tj= 2일 때,</p>\n<p>​\tif(numbers[2] &#x3C; numbers[6]) ? yes</p>\n<p>​\t\tlen = max( len, dp[2]) // 1;</p>\n<p>​\tj= 3일 때,</p>\n<p>​\tif(numbers[3] &#x3C; numbers[6]) ? yes</p>\n<p>​\t\tlen = max (len, dp[3]) // max(1, 2) 는 2; </p>\n<p>​\tj= 4일 때,</p>\n<p>​\tif(numbers[4] &#x3C; numbers[6]) ? yes</p>\n<p>​\t\tlen = max(len, dp[4]) // max(2, 2) 는 2;</p>\n<p>​\tj= 5일 때,</p>\n<p>​\tif(numbers[5] &#x3C; numbers[6]) ? yes</p>\n<p>​\t\tlen = max(len, dp[5]) // max(2,3) 은 3;</p>\n<p>dp[6] = len + 1; // 4</p>\n<p>answer = max( 3, 4 ) // 4</p>\n<ul>\n<li>dp</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>index</th>\n<th>0</th>\n<th>1</th>\n<th>2</th>\n<th>3</th>\n<th>4</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>value</td>\n<td><em>1</em></td>\n<td><em>1</em></td>\n<td><em>1</em></td>\n<td><em>2</em></td>\n<td>2</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th>5</th>\n<th>6</th>\n<th>7</th>\n<th>-</th>\n<th>-</th>\n<th>-</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>3</td>\n<td><strong><em>4</em></strong></td>\n<td>0</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<hr>\n<p>i=7일 때,</p>\n<p>len = 0;</p>\n<p>​\tj = 0일 때,</p>\n<p>​\tif(numbers[0]&#x3C; numbers[7]) ? yes</p>\n<p>​\t\tlen = max( len , dp[0]) // 1;</p>\n<p>​\tj= 1일 때,</p>\n<p>​\tif(numbers[1] &#x3C; numbers[7]) ? yes</p>\n<p>​\t\tlen = max( len, dp[1]) // 1;</p>\n<p>​\tj= 2일 때,</p>\n<p>​\tif(numbers[2] &#x3C; numbers[7]) ? yes</p>\n<p>​\t\tlen = max( len, dp[2]) // 1;</p>\n<p>​\tj= 3일 때,</p>\n<p>​\tif(numbers[3] &#x3C; numbers[7]) ? yes</p>\n<p>​\t\tlen = max (len, dp[3]) // max(1, 2) 는 2; </p>\n<p>​\tj= 4일 때,</p>\n<p>​\tif(numbers[4] &#x3C; numbers[7]) ? yes</p>\n<p>​\t\tlen = max(len, dp[4]) // max(2, 2) 는 2;</p>\n<p>​\tj= 5일 때,</p>\n<p>​\tif(numbers[5] &#x3C; numbers[7]) ? yes</p>\n<p>​\t\tlen = max(len, dp[5]) // max(2,3) 은 3;</p>\n<p>​\tj =6일 때,</p>\n<p>​\tif(numbers[6] &#x3C; numbers[7]) ? no</p>\n<p>dp[7] = len + 1; // 4</p>\n<p>answer = max( 4, 4 ) // 4</p>\n<ul>\n<li>dp</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>index</th>\n<th>0</th>\n<th>1</th>\n<th>2</th>\n<th>3</th>\n<th>4</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>value</td>\n<td><em>1</em></td>\n<td><em>1</em></td>\n<td><em>1</em></td>\n<td><em>2</em></td>\n<td>2</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th>5</th>\n<th>6</th>\n<th>7</th>\n<th>-</th>\n<th>-</th>\n<th>-</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>3</td>\n<td>4</td>\n<td><strong><em>4</em></strong></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<hr>\n<p><strong>answer 는 4.</strong></p>\n<blockquote>\n<p>코드 구현(C++)</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;string></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;vector></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;algorithm></span></span>\n\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> numbers<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">int</span> answer <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token function\">dp</span><span class=\"token punctuation\">(</span>numbers<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span> numbers<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">int</span> len <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> i<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>j<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>numbers<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> numbers<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n                len <span class=\"token operator\">=</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span>len<span class=\"token punctuation\">,</span> dp<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> len <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    \tanswer <span class=\"token operator\">=</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span>answer<span class=\"token punctuation\">,</span> dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> answer<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>keyword : <strong>Dynamic Programming</strong></p>","frontmatter":{"title":"Longest Increasing Subsequence","date":"December 03, 2018"}}},"pageContext":{"slug":"/study/algorithm/2018-12-03-LIS/"}}